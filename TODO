Add long options to programs libls/ls.c, rcp, rlogind, rlogin, rshd,
telnetd, tftpd, especially the clients.  The conventions used by
telnet & ftp should be followed.

Move the horrible mess of code from telnetd/sys_term.c into functions
in libinetutils using the BSD libutil functionality (such that they
can be elided if a system libutil exists); specifically:
    login  -- Frob utmp &c for a new login process
    logout -- Frob utmp &c for a newly logged out process
    openpty -- Find a free pty, allocate and set it up, and return it
    forkpty -- Calls openpty as well as forking a new process to use it
and the following functions not in BSD:
    cleanup_session -- More general cleanup for a newly logged out process
			(calls logout and logwtmp, frobs tty perms)
    setup_session -- More general setup for a new login process (calls login,
			frobs tty perms, ...?)
[logout and cleanup_session are written, but telnetd doesn't use them
yet.]  Rlogind currently depends on having the BSD functions
available, so it is cleaner, if less portable than telnetd; once this
cleanup is done, then rlogind will more portable, and telnetd less
messy.  This is already partially done, but care is needed as
sys_term.c does lots of stuff that I'm not sure is needed, but might
be.
